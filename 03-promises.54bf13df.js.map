{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SAepC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAaP,SAASQ,EAAaT,EAAUC,GAC9BP,EAAAgB,OAAOC,QAAQ,uBAAqBX,QAAiBC,MAAW,CAC5DW,cAAY,EACdC,SAAS,IAIb,SAASC,EAAcd,EAAUC,GAC/BP,EAAAgB,OAAOK,QAAQ,sBAAoBf,QAAeC,MAAW,CAC3DW,cAAc,EACdC,SAAS,IA9CbjB,EAAKoB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIjB,EAAQkB,OAAOvB,EAAKwB,SAASnB,MAAMoB,OACvC,MAAMC,EAAOH,OAAOvB,EAAKwB,SAASE,KAAKD,OACjCE,EAASJ,OAAOvB,EAAKwB,SAASG,OAAOF,QAoB7C,SAAuBG,EAAOF,EAAMC,GAClC,IAAK,IAAIE,EAAW,EAAGA,GAAYF,EAAQE,GAAY,EACrD1B,EAAc0B,EAAUD,GACrBE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,KAAYQ,EAAaT,EAAUC,KACrD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,KAAYa,EAAcd,EAAUC,KAC1DuB,GAASF,GAvBXM,CAAc3B,EAAOqB,EAAMC,GAC3B3B,EAAKiC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n\n  promisesCycle(delay, step, amount);\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction promisesCycle(delay, step, amount) {\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => succesNotify(position, delay))\n      .catch(({ position, delay }) => failureNotify(position, delay));\n    delay += step;\n  }\n}\n\nfunction succesNotify(position, delay) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    clickToClose: true,\n    useIcon: false,\n  });\n}\n\nfunction failureNotify(position, delay) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    clickToClose: true,\n    useIcon: false,\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$succesNotify","Notify","success","clickToClose","useIcon","$47d4ff9957288465$var$failureNotify","failure","addEventListener","e","preventDefault","Number","elements","value","step","amount","delay1","position1","then","catch","$47d4ff9957288465$var$promisesCycle","reset"],"version":3,"file":"03-promises.54bf13df.js.map"}