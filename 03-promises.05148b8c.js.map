{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAepC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAaP,SAASQ,EAAaT,EAAUC,GAC9BP,EAAAgB,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,MAAK,CAC9DY,cAAY,EACdC,SAAS,IAIb,SAASC,EAAcf,EAAUC,GAC/BP,EAAAgB,OAAOM,QAAQ,sBAAqCJ,OAAfZ,EAAS,QAAYY,OAANX,EAAM,MAAK,CAC7DY,cAAc,EACdC,SAAS,IA9CblB,EAAKqB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIlB,EAAQmB,OAAOxB,EAAKyB,SAASpB,MAAMqB,OACjCC,EAAOH,OAAOxB,EAAKyB,SAASE,KAAKD,OACjCE,EAASJ,OAAOxB,EAAKyB,SAASG,OAAOF,QAoB7C,SAAuBrB,EAAOsB,EAAMC,GAClC,IAAK,IAAIC,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrD1B,EAAc0B,EAAUxB,GACrByB,MAAK,SAAAC,G,OAAyBlB,EAAdkB,EAAR3B,SAAe2B,EAAL1B,UAClB2B,OAAM,SAAAD,G,OAAyBZ,EAAdY,EAAR3B,SAAe2B,EAAL1B,UACtBA,GAASsB,GAvBXM,CAAc5B,EAAOsB,EAAMC,GAC3B5B,EAAKkC,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n\n  promisesCycle(delay, step, amount);\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction promisesCycle(delay, step, amount) {\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => succesNotify(position, delay))\n      .catch(({ position, delay }) => failureNotify(position, delay));\n    delay += step;\n  }\n}\n\nfunction succesNotify(position, delay) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    clickToClose: true,\n    useIcon: false,\n  });\n}\n\nfunction failureNotify(position, delay) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    clickToClose: true,\n    useIcon: false,\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$succesNotify","Notify","success","concat","clickToClose","useIcon","$ce04d3a99e08e73b$var$failureNotify","failure","addEventListener","e","preventDefault","Number","elements","value","step","amount","position1","then","param","catch","$ce04d3a99e08e73b$var$promisesCycle","reset"],"version":3,"file":"03-promises.05148b8c.js.map"}